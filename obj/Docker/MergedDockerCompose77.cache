name: dockercompose13536509858701310971
services:
  airlab:
    build:
      context: C:\Users\Tasos\source\repos\AirLab
      dockerfile: AirLab/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: AirLab
      target: base
    container_name: airlab-api
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    expose:
    - "5000"
    extra_hosts:
    - host.docker.internal:host-gateway
    image: airlab:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net6.0/AirLab.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      nginx-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    restart: unless-stopped
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\AirLab
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\dotnet\sdk\NuGetFallbackFolder
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab
      target: /src
      bind:
        create_host_path: true
  certbot:
    image: certbot/certbot
    networks:
      default: null
    restart: unless-stopped
    volumes:
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\certbot\conf
      target: /etc/letsencrypt
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\certbot\www
      target: /var/www/certbot
      bind:
        create_host_path: true
  nginx:
    depends_on:
      airlab:
        condition: service_started
    environment:
      NGINX_HOST: www.airlabapi.online
    image: nginx:stable-alpine
    networks:
      nginx-network: null
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "443"
      protocol: tcp
    - mode: ingress
      target: 81
      published: "81"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\nginx\templates
      target: /etc/nginx/templates
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\certbot\conf
      target: /etc/letsencrypt
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\certbot\www
      target: /var/www/certbot
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose13536509858701310971_default
  nginx-network:
    name: dockercompose13536509858701310971_nginx-network
    driver: bridge