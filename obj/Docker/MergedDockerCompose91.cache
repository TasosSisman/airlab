name: dockercompose13536509858701310971
services:
  airlab:
    build:
      context: C:\Users\Tasos\source\repos\AirLab
      dockerfile: AirLab/Dockerfile
    container_name: airlab-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    expose:
    - "5000"
    extra_hosts:
    - host.docker.internal:host-gateway
    image: airlab
    networks:
      nginx-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: host
      host_ip: 127.0.0.1
      target: 6060
      published: "6060"
      protocol: udp
    restart: unless-stopped
    volumes:
    - type: bind
      source: C:\Users\Tasos\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  nginxproxymanager:
    depends_on:
      airlab:
        condition: service_started
    image: jc21/nginx-proxy-manager:latest
    networks:
      nginx-network: null
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    - mode: ingress
      target: 81
      published: "81"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "443"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\nginx\data
      target: /data
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Tasos\source\repos\AirLab\nginx\letsencrypt
      target: /etc/letsencrypt
      bind:
        create_host_path: true
networks:
  nginx-network:
    name: dockercompose13536509858701310971_nginx-network
    driver: bridge